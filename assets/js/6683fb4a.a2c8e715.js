"use strict";(self.webpackChunkapache_website_template=self.webpackChunkapache_website_template||[]).push([[761],{5404:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var t=s(6672);const a={},r=t.createContext(a);function c(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(r.Provider,{value:n},e.children)}},8551:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"postgresql","title":"Importing results from PostgreSQL","description":"See otava.yaml for the full example configuration.","source":"@site/docs/postgresql.md","sourceDirName":".","slug":"/postgresql","permalink":"/docs/postgresql","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/otava-website/tree/master/docs/postgresql.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Graphite","permalink":"/docs/graphite"},"next":{"title":"BigQuery","permalink":"/docs/big-query"}}');var a=s(3420),r=s(5404);const c={},o="Importing results from PostgreSQL",i={},l=[{value:"PostgreSQL Connection",id:"postgresql-connection",level:2},{value:"Tests",id:"tests",level:2},{value:"Example",id:"example",level:2},{value:"Usage",id:"usage",level:3},{value:"Configuration",id:"configuration",level:3},{value:"CLI arguments",id:"cli-arguments",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"importing-results-from-postgresql",children:"Importing results from PostgreSQL"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.a,{href:"https://github.com/apache/otava/tree/master/examples/postgresql/otava.yaml",children:"otava.yaml"})," for the full example configuration."]})}),"\n",(0,a.jsx)(n.h2,{id:"postgresql-connection",children:"PostgreSQL Connection"}),"\n",(0,a.jsx)(n.p,{children:"The following block contains PostgreSQL connection details:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"postgres:\n  hostname: ...\n  port: ...\n  username: ...\n  password: ...\n  database: ...\n"})}),"\n",(0,a.jsxs)(n.p,{children:["These variables can be specified directly in ",(0,a.jsx)(n.code,{children:"otava.yaml"})," or passed as environment variables:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"postgres:\n  hostname: ${POSTGRES_HOSTNAME}\n  port: ${POSTGRES_PORT}\n  username: ${POSTGRES_USERNAME}\n  password: ${POSTGRES_PASSWORD}\n  database: ${POSTGRES_DATABASE}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"tests",children:"Tests"}),"\n",(0,a.jsx)(n.p,{children:"Test configuration contains queries selecting experiment data, a time column, and a list of columns to analyze:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"tests:\n  aggregate_mem:\n    type: postgres\n    time_column: commit_ts\n    attributes: [experiment_id, config_id, commit]\n    metrics:\n      process_cumulative_rate_mean:\n        direction: 1\n        scale: 1\n      process_cumulative_rate_stderr:\n        direction: -1\n        scale: 1\n      process_cumulative_rate_diff:\n        direction: -1\n        scale: 1\n    query: |\n      SELECT e.commit,\n             e.commit_ts,\n             r.process_cumulative_rate_mean,\n             r.process_cumulative_rate_stderr,\n             r.process_cumulative_rate_diff,\n             r.experiment_id,\n             r.config_id\n      FROM results r\n      INNER JOIN configs c ON r.config_id = c.id\n      INNER JOIN experiments e ON r.experiment_id = e.id\n      WHERE e.exclude_from_analysis = false AND\n            e.branch = 'trunk' AND\n            e.username = 'ci' AND\n            c.store = 'MEM' AND\n            c.cache = true AND\n            c.benchmark = 'aggregate' AND\n            c.instance_type = 'ec2i3.large'\n      ORDER BY e.commit_ts ASC;\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.p,{children:"Start docker-compose with PostgreSQL in one tab:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker-compose -f examples/postgresql/docker-compose.yaml up --force-recreate --always-recreate-deps --renew-anon-volumes\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Run Otava in the other tab to show results for a single test ",(0,a.jsx)(n.code,{children:"aggregate_mem"})," and update the database with newly found change points:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker-compose -f examples/postgresql/docker-compose.yaml run --build otava bin/otava analyze aggregate_mem --update-postgres\n"})}),"\n",(0,a.jsx)(n.p,{children:"Expected output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"0.0s",children:"time                       experiment_id       commit      process_cumulative_rate_mean    process_cumulative_rate_stderr    process_cumulative_rate_diff\n-------------------------  ------------------  --------  ------------------------------  --------------------------------  ------------------------------\n2024-03-13 10:03:02 +0000  aggregate-36e5ccd2  36e5ccd2                           61160                              2052                           13558\n2024-03-25 10:03:02 +0000  aggregate-d5460f38  d5460f38                           60160                              2142                           13454\n2024-04-02 10:03:02 +0000  aggregate-bc9425cb  bc9425cb                           60960                              2052                           13053\n                                                         \xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\n                                                                                  -5.6%\n                                                         \xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\n2024-04-06 10:03:02 +0000  aggregate-14df1b11  14df1b11                           57123                              2052                           14052\n2024-04-13 10:03:02 +0000  aggregate-ac40c0d8  ac40c0d8                           57980                              2052                           13521\n2024-04-27 10:03:02 +0000  aggregate-0af4ccbc  0af4ccbc                           56950                              2052                           13532\n"})}),"\n",(0,a.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.a,{href:"https://github.com/apache/otava/blob/master/examples/postgresql/otava.yaml",children:"otava.yaml"})," for the example configuration:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Block ",(0,a.jsx)(n.code,{children:"postgres"})," contains connection details to the PostgreSQL database."]}),"\n",(0,a.jsxs)(n.li,{children:["Block ",(0,a.jsx)(n.code,{children:"templates"})," contains common pieces of configuration used by all tests - time column and a list of attributes and metrics."]}),"\n",(0,a.jsxs)(n.li,{children:["Block ",(0,a.jsx)(n.code,{children:"tests"})," contains configuration for the individual tests, specifically a query that fetches analyzed columns sorted by commit timestamp."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/apache/otava/blob/master/examples/postgresql/init-db/schema.sql",children:"schema.sql"})," contains the schema used in this example."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/apache/otava/blob/master/examples/postgresql/docker-compose.yaml",children:"docker-compose.yaml"})," contains example config required to connect to PostgreSQL:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"POSTGRES_*"})," environment variables are used to pass connection details to the container."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"OTAVA_CONFIG"})," is the path to the configuration file described above."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"BRANCH"})," variable is used within ",(0,a.jsx)(n.code,{children:"OTAVA_CONFIG"})," to analyze experiment results only for a specific branch."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"cli-arguments",children:"CLI arguments"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"--update-postgres"})," - updates the database with newly found change points."]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);